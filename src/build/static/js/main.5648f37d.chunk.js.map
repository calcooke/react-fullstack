{"version":3,"sources":["pages/homepage.js","pages/AboutPage.js","pages/article-content.js","components/articleslist.js","pages/ArticlesListPage.js","components/CommentsList.js","components/UpvotesSection.js","components/AddCommentForm.js","pages/NotFoundPage.js","pages/ArticlePage.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","AboutPage","articles","name","title","content","ArticlesList","map","article","key","className","to","substring","ArticlesListPage","articleContent","CommentsList","comments","comment","username","text","UpvotesSection","articleName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","id","onClick","AddCommentForm","useState","setUsername","commentText","setCommentText","addComment","console","log","JSON","stringify","headers","type","value","onChange","event","target","rows","cols","NotFoundPage","ArticlePage","match","params","find","articleInfo","useEffect","fetchData","otherArticles","filter","paragraph","NavBar","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5648f37d.chunk.js","sourcesContent":["import React from 'react';\n\nconst HomePage = () => (\n\n    <>\n\n        <h1> Hello,welcome to my cool blog</h1>\n\n        <p>\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore \n            et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco \n            laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in \n            voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non p\n            roident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n        </p>\n\n        <p>\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore \n        et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco \n        laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in \n        voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non p\n        roident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n        </p>\n\n    </>\n\n);\n\nexport default HomePage;","import React from 'react';\n\nconst AboutPage = () => (\n\n    <>\n\n        <h1> About</h1>\n\n        <p>\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore \n            et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco \n            laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in \n            voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non p\n            roident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n        </p>\n\n\n    </>\n\n);\n\nexport default AboutPage;","const articles = [\n    {\n        name: 'learn-react',\n        title: 'The Fastest Way to Learn React',\n        content: [\n            `Welcome! Today we're going to be talking about the fastest way to\n            learn React. We'll be discussing some topics such as proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },    {\n        name: 'learn-node',\n        title: 'How to Build a Node Server in 10 Minutes',\n        content: [\n            `In this article, we're going to be talking looking at a very quick way\n            to set up a Node.js server. We'll be discussing some topics such as proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },     {\n        name: 'my-thoughts-on-resumes',\n        title: 'My Thoughts on Resumes',\n        content: [\n            `Today is the day I talk about something which scares most people: resumes.\n            In reality, I'm not sure why people have such a hard time with proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },  \n];\n\nexport default articles;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\n\nconst ArticlesList = ({articles}) => (\n    <>\n\n    {articles.map( (article, key) => (\n\n        <Link className=\"article-list-item\" key={key} to={`/article/${article.name}`}>\n\n            <h3>{article.title}</h3>\n\n                {/* Include a short summary of the paragraphs under the links.\n                Seeing as the paragraphs are JSON data - basically an array of strings,\n                we can include just the first 150 by using 'substring' */}\n\n            <p>{article.content[0].substring(0.30)}...</p>\n            \n        </Link>\n\n    ))}\n</>\n);\n\nexport default ArticlesList;","import React from 'react';\nimport articleContent from './article-content'\nimport ArticlesList from '../components/articleslist';\n\nconst ArticlesListPage = () => (\n\n    <>\n\n        <h1> Articles</h1>\n\n        {/* Place the now modular ArticleList compoent here, and pass the article content as a paramater */}\n\n        <ArticlesList articles={articleContent} />\n\n    </>\n\n);\n\nexport default ArticlesListPage;","import React from 'react';\n\nconst CommentsList = ({comments}) => (\n\n    <>\n\n    <h3>Comments:</h3> \n\n    {/* For each comment passed in, create a html comment.\n    The dtata is retrieved from passing the articleInfo state into the component \n    when placed on the articles Page */}\n\n    {comments.map((comment, key) => (\n\n        <div className=\"comment\" key={key}>\n\n            <h4>{comment.username}</h4>\n            <p>{comment.text}</p>\n\n        </div>\n\n    ))}\n\n    </>\n\n);\n\nexport default CommentsList;","import React from 'react';\n\nconst UpvotesSection = ({ articleName, upvotes, setArticleInfo}) => {\n\n    const upvoteArticle = async () => {\n\n        // Make a call to the endpoint, setting the mehod as post\n\n        const result = await fetch(`/api/articles/${articleName}/upvote`, {\n            method:'post',\n        });\n\n        const body = await result.json();\n        setArticleInfo(body);\n\n    }\n\n    return (\n\n        <div id=\"upvotes-section\">\n\n            {/* Set the click callback to call upvoteArticle() */}\n\n            <button onClick={()=> upvoteArticle()}>Add Upvote</button>\n            <p> This post has been upvoted {upvotes} times</p>\n\n        </div>\n\n    );\n\n};\n\n\n\nexport default UpvotesSection;","import React, {useState} from 'react';\n\n\nconst AddCommentForm =({articleName, setArticleInfo}) =>{\n\n    //When setting a default value, the default value for a string is blank\n    //Match these to the corresponding text fileds\n    // by icluding a \"value\" property in them\n\n    const [username, setUsername] = useState('');\n    const [commentText, setCommentText] = useState('');\n\n    const addComment = async () =>{\n\n        console.log(username);\n\n        //articlename is passed into this function as a arguement\n\n        const result = await fetch(`/api/articles/${articleName}/add-comment`, {\n\n            method: 'post',\n            //JSONstringify turns the JSON into a string that the server can parse\n            // these must match the name values exavtly on the server\n            // You can't have userName here and username on the server\n            body: JSON.stringify({username, text: commentText}),\n            //When sending Post requestswith a JSON body to the server, we need to include a header\n            //This tells the server what type of data we're parsing along, and allows it to parse our request body correctly\n            headers:{\n                'Content-Type': 'application/json'\n            }\n\n        });\n\n        const body = await result.json();\n\n        console.log(body);\n\n        //setArticleInfo is a function that has been passed into this component as a property\n\n        setArticleInfo(body);\n\n        //Reset text fields\n        setUsername('');\n        setCommentText('');\n\n\n\n    }\n\n    return(\n\n        <div id=\"add-comment-form\">\n\n            <h3>Add a comment</h3>\n\n            <label>\n                Name:\n                {/* Username state is binded to this text input through the value\n                Update the userName state whenever there's a change */}\n                <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)}/> \n            </label>\n\n            <label>\n                Comment:\n                <textarea rows=\"4\"cols =\"50\" value={commentText} onChange={(event) => setCommentText(event.target.value)}/>\n            </label>\n\n            <button onClick={() => addComment()}>Add Comment</button>\n\n        </div>\n\n)}\n\nexport default AddCommentForm;","import React from 'react';\n\nconst NotFoundPage = () => (\n\n    <h1>404: Page not found</h1>\n\n)\n\nexport default NotFoundPage;","import React, {useState, useEffect} from 'react';\nimport articleContent from './article-content';\nimport ArticlesList from '../components/articleslist';\nimport CommentsList from '../components/CommentsList';\nimport UpvotesSection from'../components/UpvotesSection';\nimport AddCommentForm from '../components/AddCommentForm';\nimport NotFoundPage from './NotFoundPage';\n\nconst ArticlePage = ({match}) => {\n\n    const name = match.params.name;\n\n    //Find the article who's name property is equal to the nameparam\n\n    const article = articleContent.find(article => article.name === name);\n\n    //Importing useState gives us somewhere to store the state of a page\n    //React hooks take two things, a definition of a state, eg aricleInfo\n    // And a function to call to change the state's info\n    //We also set two default values in useState\n\n    const [articleInfo, setArticleInfo] = useState({upvotes: 0, comments: []});\n\n    //useEffect is another react hook, giving us a place to perfomr all\n    // the side effects of our commponents such as fetching data\n    //and setting the state with the result\n    // How it works is by calling an anonymous function when the page is loaded.\n    // We need to tell useEffect when to update, by passing values for it to watch into an array arguement.\n    //We want ti to update when the url changes, so we pass in the 'name' const\n\n    useEffect(() => {\n\n        const fetchData = async () => {\n\n            //Make a call to the server, passing the path name we got from out url paramaters\n            //Request is automatically added to the lochalhost address proxy in the\n            //package.json file\n\n            const result = await fetch(`/api/articles/${name}`);  //appended to address from package.json\n\n            const body = await result.json();\n\n            console.log(body);\n\n            //Pass body in to the setArticleInfo function defined in useState()\n\n            setArticleInfo(body);\n\n        }\n\n        fetchData();\n\n\n    }, [name]);\n\n    \n    //if a wrong header gets type in somehow, and the article does not exist, return the NotFoundPage component\n\n    if(!article) return <NotFoundPage/>\n\n    // To include related articles in the nav bat at the bottom, we only want the other articles and not this one. \n    // To get the other articles, we must filter out the article who's name natches thus one.\n\n    const otherArticles = articleContent.filter(article => article.name !== name);\n\n    return(\n\n    <>\n\n        <h1> This is an {article.title}</h1>\n\n        {/* Include the upvotes component, passing in the three arguements it requires */}\n\n        <UpvotesSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo}/>\n\n        {/* Seeing as the paragrah contect is just a bunch of strings in JSON, we need\n        to map it to a P element. React always want to include a Key property when mapping, so just insert a \n        blank one but don't use it. */}\n\n        {article.content.map( (paragraph, key) => (\n\n            <p key={key}>{paragraph}</p>\n\n        ))}\n\n        {/* Include the comments component and pass in the articleInfo state */}\n\n        <CommentsList comments={articleInfo.comments}/>\n\n        {/* Include the AddComment component and pass it the paramaters it needs for it's functionality   */}\n\n        <AddCommentForm articleName={name} setArticleInfo={setArticleInfo}/>\n\n        {/* Include another nav bar using our modular nav bar component, showing related articles.\n        This is our imported modular component, being passed a paramater of our now filtered\n        article list */}\n\n        <h3>Other Articles</h3>\n\n        <ArticlesList articles={otherArticles} /> \n\n    </>\n\n    )\n\n    };\n\nexport default ArticlePage;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst NavBar = () => (\n\n\n    <nav>\n\n        <ul>\n            <li>\n                <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n                <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n                <Link to=\"/articles-list\">Articles</Link>\n            </li>\n        </ul>\n\n    </nav>\n\n\n);\n\nexport default NavBar","import React from 'react';\nimport { \n  BrowserRouter as Router,\n  Route,\n  Switch}\n  from 'react-router-dom';\nimport HomePage from './pages/homepage'\nimport AboutPage from './pages/AboutPage'\nimport ArticlesListPage from './pages/ArticlesListPage'\nimport ArticlePage from './pages/ArticlePage'\nimport NavBar from './NavBar'\nimport NotFoundPage from './pages/NotFoundPage';\nimport './App.css';\n\nfunction App() {\n  return (\n\n    <Router>\n\n      <div className=\"App\">\n\n        <NavBar/>\n\n        <div id=\"page-body\">\n        \n        <Switch>\n          <Route path=\"/\" component={HomePage} exact />\n          <Route path=\"/about\" component={AboutPage}/>\n          <Route path=\"/articles-list\" component={ArticlesListPage} />\n          <Route path=\"/article/:name\" component={ArticlePage} />\n          <Route component={NotFoundPage}/>\n        </Switch>\n\n        </div>\n\n      </div>\n\n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}